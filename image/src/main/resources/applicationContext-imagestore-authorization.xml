<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
 "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
 Copyright (c) 2006 Oliver Stewart.  All Rights Reserved.

 This file is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2, or (at your option)
 any later version.

 This file is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
-->

<beans>
  <!-- ========= ACCESS CONTROL LIST LOOKUP MANAGER DEFINITIONS ========= -->
  
  <bean id="aclManager" class="org.acegisecurity.acl.AclProviderManager">
    <property name="providers">
      <list>
        <ref local="basicAclProvider"/>
        <ref local="imageOwnerAclProvider"/>
        <ref local="imageGroupOwnerAclProvider"/>
        <ref local="imageManifestationOwnerAclProvider"/>
        <ref local="imageFrameImageAclProvider"/>
      </list>
    </property>
  </bean>

  <bean id="messageSource"
    class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <property name="basename">
      <value>org/acegisecurity/messages</value>
    </property>
  </bean>
  
  <bean id="basicAclProvider"
    class="org.acegisecurity.acl.basic.BasicAclProvider">
    <property name="basicAclDao"><ref
        local="basicAclExtendedDao"/></property>
    <property name="basicAclEntryCache">
      <ref local="aclEntryCache"/>
    </property>
  </bean>

  <bean id="basicAclExtendedDao"
    class="org.acegisecurity.acl.basic.jdbc.JdbcExtendedDaoImpl">
    <property name="dataSource"><ref bean="dataSource"/></property>

    <property name="basicAclEntryCache">
      <ref local="aclEntryCache"/>
  </property>

  </bean>

  <bean id="imageOwnerAclProvider"
    class="com.trailmagic.image.security.ImageOwnerAclProvider">
    <property name="imageGroupRepository">
      <ref bean="imageGroupRepository"/>
    </property>
  </bean>

  <bean id="imageGroupOwnerAclProvider"
    class="com.trailmagic.image.security.ImageGroupOwnerAclProvider"/>

  <bean id="imageManifestationOwnerAclProvider"
    class="com.trailmagic.image.security.ImageManifestationOwnerAclProvider"/>

  <bean id="imageFrameImageAclProvider"
    class="com.trailmagic.image.security.ImageFrameImageAclProvider">
    <property name="aclManager">
      <ref local="aclManager"/>
    </property>
  </bean>


   <!-- An access decision voter that reads ROLE_* configuration settings -->
   <bean id="roleVoter" class="org.acegisecurity.vote.RoleVoter"/>

  <!-- ============ METHOD INVOCATION AUTHORIZATION ==================== -->

  <!-- ACL permission masks used by this application -->
  <bean id="simpleAclEntry.ADMINISTRATION"
    class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
    <property name="staticField">
      <value>org.acegisecurity.acl.basic.SimpleAclEntry.ADMINISTRATION</value>
    </property>
  </bean>
  
  <bean id="simpleAclEntry.READ"
    class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
    <property name="staticField">
      <value>org.acegisecurity.acl.basic.SimpleAclEntry.READ</value>
    </property>
  </bean>
  
  <bean id="simpleAclEntry.DELETE"
    class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
    <property name="staticField">
      <value>org.acegisecurity.acl.basic.SimpleAclEntry.DELETE</value>
    </property>
  </bean>



  <!-- An access decision voter for ACL_IMAGE_READ configuration settings -->
  <bean id="aclImageReadVoter"
    class="com.trailmagic.image.security.BetterAclEntryVoter">
    <property name="processConfigAttribute">
      <value>ACL_IMAGE_READ</value>
    </property>
    <property name="processDomainObjectClass">
      <value>com.trailmagic.image.Image</value>
    </property>
    <property name="aclManager"><ref local="aclManager"/></property>
    <property name="requirePermission">
      <list>
        <ref local="simpleAclEntry.ADMINISTRATION"/>
        <ref local="simpleAclEntry.READ"/>
      </list>
    </property>
  </bean>

  <bean id="aclObjectAdminVoter"
    class="com.trailmagic.image.security.BetterAclEntryVoter">
    <property name="processConfigAttribute">
      <value>ACL_OBJECT_ADMIN</value>
    </property>
    <property name="processDomainObjectClass">
      <value>java.lang.Object</value>
    </property>
    <property name="aclManager"><ref local="aclManager"/></property>
    <property name="requirePermission">
      <list>
        <ref local="simpleAclEntry.ADMINISTRATION"/>
      </list>
    </property>
  </bean>

  <!-- An access decision voter for ACL_IMAGE_DELETE configuration settings -->
  <bean id="aclImageDeleteVoter"
    class="com.trailmagic.image.security.BetterAclEntryVoter">
    <property name="processConfigAttribute">
      <value>ACL_IMAGE_DELETE</value>
    </property>
    <property name="processDomainObjectClass">
      <value>com.trailmagic.image.Image</value>
    </property>
    <property name="aclManager"><ref local="aclManager"/></property>
    <property name="requirePermission">
      <list>
        <ref local="simpleAclEntry.ADMINISTRATION"/>
        <ref local="simpleAclEntry.DELETE"/>
      </list>
    </property>
  </bean>

  <!-- An access decision voter for ACL_IMAGE_ADMIN configuration settings -->
  <bean id="aclImageAdminVoter"
    class="com.trailmagic.image.security.BetterAclEntryVoter">
    <property name="processConfigAttribute">
      <value>ACL_IMAGE_ADMIN</value>
    </property>
    <property name="processDomainObjectClass">
      <value>com.trailmagic.image.Image</value>
    </property>
    <property name="aclManager"><ref local="aclManager"/></property>
    <property name="requirePermission">
      <list>
        <ref local="simpleAclEntry.ADMINISTRATION"/>
      </list>
    </property>
  </bean>

  <bean id="aclImageGroupAdminVoter"
    class="com.trailmagic.image.security.BetterAclEntryVoter">
    <property name="processConfigAttribute">
      <value>ACL_IMAGE_GROUP_ADMIN</value>
    </property>
    <property name="processDomainObjectClass">
      <value>com.trailmagic.image.ImageGroup</value>
    </property>
    <property name="aclManager"><ref local="aclManager"/></property>
    <property name="requirePermission">
      <list>
        <ref local="simpleAclEntry.ADMINISTRATION"/>
      </list>
    </property>
  </bean>
  
  <bean id="aclImageFrameAdminVoter"
    class="com.trailmagic.image.security.BetterAclEntryVoter">
    <property name="processConfigAttribute">
      <value>ACL_IMAGE_FRAME_ADMIN</value>
    </property>
    <property name="processDomainObjectClass">
      <value>com.trailmagic.image.ImageFrame</value>
    </property>
    <property name="aclManager"><ref local="aclManager"/></property>
    <property name="requirePermission">
      <list>
        <ref local="simpleAclEntry.ADMINISTRATION"/>
      </list>
    </property>
  </bean>

  <bean id="aclImageManifestationAdminVoter"
    class="com.trailmagic.image.security.BetterAclEntryVoter">
    <property name="processConfigAttribute">
      <value>ACL_IMAGE_MF_ADMIN</value>
    </property>
    <property name="processDomainObjectClass">
      <value>com.trailmagic.image.ImageManifestation</value>
    </property>
    <property name="aclManager"><ref local="aclManager"/></property>
    <property name="requirePermission">
      <list>
        <ref local="simpleAclEntry.ADMINISTRATION"/>
      </list>
    </property>
  </bean>

  <bean id="imageAccessDecisionManager"
    class="org.acegisecurity.vote.AffirmativeBased">
    <property name="allowIfAllAbstainDecisions">
      <value>true</value>
    </property>
    <property name="decisionVoters">
      <list>
        <ref bean="aclImageReadVoter"/>
        <ref bean="aclImageDeleteVoter"/>
        <ref bean="aclImageAdminVoter"/>
        <ref bean="aclObjectAdminVoter"/>
        <ref bean="aclImageGroupAdminVoter"/>
        <ref bean="aclImageFrameAdminVoter"/>
        <ref bean="aclImageManifestationAdminVoter"/>
      </list>
    </property>
  </bean>

  <bean id="testVoter"
    class="com.trailmagic.image.security.TestVoter"/>


  <!--
  you got some 'splainin' to do
    -->
  <bean id="imageFactorySecurity"
    class="org.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor">
    <property name="validateConfigAttributes">
      <value>true</value>
    </property>
    <property name="authenticationManager">
      <ref bean="authenticationManager"/>
    </property>
    <property name="accessDecisionManager">
      <ref local="imageAccessDecisionManager"/>
    </property>
    <property name="afterInvocationManager">
      <ref local="afterInvocationManager"/>
    </property>
    <property name="objectDefinitionSource">
      <value>
        com.trailmagic.image.ImageRepository.getById=AFTER_ACL_READ
        com.trailmagic.image.ImageRepository.getAll=AFTER_ACL_COLLECTION_READ
        com.trailmagic.image.ImageRepository.getByNameAndGroup=AFTER_ACL_COLLECTION_READ
        com.trailmagic.image.ImageRepository.getByName=AFTER_ACL_COLLECTION_READ
        com.trailmagic.image.ImageManifestationRepository.getById=AFTER_ACL_READ
        com.trailmagic.image.ImageManifestationRepository.getHeavyById=AFTER_ACL_READ
        com.trailmagic.image.ImageManifestationRepository.getAllForImageId=AFTER_ACL_COLLECTION_READ
        com.trailmagic.image.ImageGroupRepository.getAlbumByOwnerAndName=AFTER_ACL_READ
        com.trailmagic.image.ImageGroupRepository.getRollByOwnerAndName=AFTER_ACL_READ
        com.trailmagic.image.ImageGroupRepository.getImageFrameByImageGroupAndImageId=AFTER_ACL_READ
        com.trailmagic.image.ImageGroupRepository.getAlbumsByOwnerScreenName=AFTER_ACL_COLLECTION_READ
        com.trailmagic.image.ImageGroupRepository.getRollsByOwnerScreenName=AFTER_ACL_COLLECTION_READ
        com.trailmagic.image.ImageGroupRepository.getByOwnerScreenNameAndType=AFTER_ACL_COLLECTION_READ
        com.trailmagic.image.ImageGroupRepository.getByOwnerNameAndTypeWithFrames=AFTER_ACL_READ
        com.trailmagic.image.ImageGroupRepository.getByImage=AFTER_ACL_COLLECTION_READ
        com.trailmagic.image.ImageGroupRepository.getRollForImage=AFTER_ACL_READ
        com.trailmagic.image.security.ImageSecurityFactory.makePublic=ACL_OBJECT_ADMIN
        com.trailmagic.image.security.ImageSecurityFactory.makePrivate=ACL_OBJECT_ADMIN
        com.trailmagic.image.security.ImageSecurityFactory.addPermission=ACL_OBJECT_ADMIN
        com.trailmagic.image.security.ImageSecurityFactory.addReadPermission=ACL_OBJECT_ADMIN
        com.trailmagic.image.security.ImageSecurityFactory.setPermission=ACL_OBJECT_ADMIN
      </value>
    </property>
  </bean>

  <!--  this with DefaultAdvisorAutoProxyCreator should advise everything without
        having to explicitly proxy
  -->
  <bean id="methodDefinitionSourceAdvisor"
  	class="org.acegisecurity.intercept.method.aopalliance.MethodDefinitionSourceAdvisor">
  	<constructor-arg ref="imageFactorySecurity"/>
  </bean>
  
    <bean id="beanNameAutoProxyCreator"
    class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
    <property name="beanNames">
    <list>
	   <value>imageRepository</value>
     <value>imageManifestationRepository</value>
     <value>imageGroupRepository</value>
     <value>imageFactory</value>
     <value>imageSecurityFactory</value>
    </list>
</property>
<property name="interceptorNames">
	<value>methodDefinitionSourceAdvisor</value>
</property>
    </bean>

  

  <bean id="imageSecurityFactory"
    class="com.trailmagic.image.security.AcegiImageSecurityFactory"
    autowire="byName">
  </bean>

  <bean id="imageAspectSecurity"
    class="org.acegisecurity.intercept.method.aspectj.AspectJSecurityInterceptor">
    <property name="validateConfigAttributes">
      <value>true</value>
    </property>
    <property name="authenticationManager">
      <ref bean="authenticationManager"/>
    </property>
    <property name="accessDecisionManager">
      <ref local="imageAccessDecisionManager"/>
    </property>
    <property name="afterInvocationManager">
      <ref local="afterInvocationManager"/>
    </property>
    <property name="objectDefinitionSource">
      <value>
        com.trailmagic.image.ImageFrame.getImage=AFTER_ACL_READ
        com.trailmagic.image.ImageGroup.getFrames=AFTER_ACL_COLLECTION_READ
        com.trailmagic.image.Image.getManifestations=AFTER_ACL_COLLECTION_READ
      </value>
    </property>
  </bean>

  <bean id="imageInstanceSecurityAspect"
    class="com.trailmagic.image.ImageSecurityAspect"
    factory-method="aspectOf">
    <property name="securityInterceptor">
      <ref bean="imageAspectSecurity"/>
    </property>
  </bean>

  <!-- ======= "AFTER INTERCEPTION" AUTHORIZATION DEFINITIONS =========== -->

  <bean id="afterInvocationManager"
    class="org.acegisecurity.afterinvocation.AfterInvocationProviderManager">
    <property name="providers">
      <list>
        <ref local="afterAclRead"/>
        <ref local="afterAclCollectionRead"/>
      </list>
    </property>
  </bean>
   
  <!-- Processes AFTER_ACL_COLLECTION_READ configuration settings -->
  <bean id="afterAclCollectionRead"
    class="org.acegisecurity.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider">
    <property name="aclManager"><ref local="aclManager"/></property>
    <property name="requirePermission">
      <list>
        <ref local="simpleAclEntry.ADMINISTRATION"/>
        <ref local="simpleAclEntry.READ"/>
      </list>
    </property>
   </bean>
   
  <!-- Processes AFTER_ACL_READ configuration settings -->
  <bean id="afterAclRead"
    class="org.acegisecurity.afterinvocation.BasicAclEntryAfterInvocationProvider">
    <property name="aclManager"><ref local="aclManager"/></property>
    <property name="requirePermission">
      <list>
        <ref local="simpleAclEntry.ADMINISTRATION"/>
        <ref local="simpleAclEntry.READ"/>
      </list>
    </property>
  </bean>


  <!-- ACL CACHE -->
  <bean id="cacheManager"
    class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">

    <property name="configLocation">
      <value>classpath:/ehcache-failsafe.xml</value>
    </property>
  </bean>

  <bean id="aclCacheBackend"
    class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <property name="cacheManager">
      <ref local="cacheManager"/>
    </property>
    <property name="cacheName">
      <value>aclCache</value>
    </property>
  </bean>

  <bean id="aclEntryCache"
    class="org.acegisecurity.acl.basic.cache.EhCacheBasedAclEntryCache">
    <property name="cache"><ref local="aclCacheBackend"/></property>
  </bean>
</beans>
