<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping
    PUBLIC "-//Hibernate/Hibernate Mapping DTD//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<!--
 Copyright (c) 2006, 2007 Oliver Stewart.  All Rights Reserved.

 This file is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2, or (at your option)
 any later version.

 This file is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
-->

<hibernate-mapping
  package="com.trailmagic.image">
  
  <class
    name="ImageGroup"
    table="image_groups">

    <id
      name="id"
      type="long"
      column="group_id"
      unsaved-value="0"
      access="property">
      <generator class="native">
        <param name="sequence">id_sequence</param>
      </generator>
    </id>

    <many-to-one name="supergroup" column="supergroup_id"/>

    <set name="subgroups" inverse="true" cascade="all" lazy="true">
      <key column="supergroup_id"/>
      <one-to-many class="ImageGroup"/>
    </set>
    

    <property name="name">
      <column name="name" sql-type="varchar(100)" not-null="true"
        unique-key="image_groups_name_owner_type"/>
    </property>

    <property name="displayName">
      <column name="display_name" sql-type="varchar(1024)"
      not-null="true"/>
    </property>

    <property name="type" type="com.trailmagic.image.hibernate.TypeUserType">
      <column name="type" sql-type="varchar(100)" not-null="true"
        unique-key="image_groups_name_owner_type"
	check="in ('roll', 'album')"/>
    </property>

    <property name="description">
      <column name="description" sql-type="varchar(2048)"/>
    </property>

    <property name="uploadDate">
      <column name="upload_date" not-null="true"/>
    </property>

    <many-to-one name="owner"
      class="com.trailmagic.user.User"
      cascade="none">
      <column name="owner_id" not-null="true"
        unique-key="image_groups_name_owner_type"/>
    </many-to-one>

    
    <set
      name="frames"
      table="image_frames"
      cascade="all-delete-orphan"
      lazy="true"
      sort="natural"
      inverse="true">
      <key>
        <column name="group_id" unique-key="frames_group_position"/>
      </key>
      <!-- this should be a composite-element but that's not working
           so well -->
      <one-to-many class="ImageFrame"/>
    </set>
  </class>

  <class name="ImageFrame" table="image_frames">
    <id
      name="id"
      type="long"
      column="frame_id"
      unsaved-value="0"
      access="property">
      <generator class="native">
        <param name="sequence">id_sequence</param>
      </generator>
    </id>
    <many-to-one name="imageGroup" class="ImageGroup" cascade="none">
      <column name="group_id" not-null="true"/>
    </many-to-one>
    <property name="position">
      <column name="pos" unique-key="frames_group_position"
        not-null="true"/>
    </property>
    <property name="caption">
      <column name="caption" sql-type="varchar(4000)"/>
    </property>
    <many-to-one name="image" class="Image" cascade="none">
      <column name="image_id" not-null="true"/>
    </many-to-one>
  </class>

  <query name="albumsByOwnerScreenName">
    SELECT album FROM com.trailmagic.image.ImageGroup AS album
    INNER JOIN album.owner AS owner
    WHERE album.type = 'album'
    AND owner.screenName = :screenName
  </query>

  <query name="rollsByOwnerScreenName">
    SELECT album FROM com.trailmagic.image.ImageGroup AS album
    INNER JOIN album.owner AS owner
    WHERE album.type = 'roll'
    AND owner.screenName = :screenName
  </query>

  <query name="groupsByOwnerScreenNameAndType">
    SELECT grp FROM com.trailmagic.image.ImageGroup
    AS grp INNER JOIN grp.owner AS owner
    WHERE grp.type = :groupType
    AND owner.screenName = :screenName
  </query>

  <query name="albumOwners">
    SELECT DISTINCT album.owner
    FROM com.trailmagic.image.ImageGroup
    AS album INNER JOIN album.owner
    WHERE album.type = 'album'
  </query>

  <query name="groupOwnersByType">
    SELECT DISTINCT grp.owner
    FROM com.trailmagic.image.ImageGroup
    AS grp INNER JOIN grp.owner
    WHERE grp.type = :groupType
  </query>

  <query name="albumByOwnerAndName">
    FROM com.trailmagic.image.ImageGroup
    AS grp WHERE grp.owner = :owner AND
    grp.name = :albumName
    AND grp.type = 'album'
  </query>

  <query name="rollByOwnerAndName">
    FROM com.trailmagic.image.ImageGroup
    AS grp WHERE grp.owner = :owner AND
    grp.name = :rollName
    AND grp.type = 'roll'
  </query>

  <query name="groupByOwnerGroupNameAndType">
    FROM com.trailmagic.image.ImageGroup
    AS grp WHERE grp.owner = :owner
    AND grp.name = :groupName
    AND grp.type = :groupType
  </query>

  <query name="imageFrameByImageGroupAndImageId">
    FROM com.trailmagic.image.ImageFrame frame
    WHERE frame.imageGroup = :imageGroup
    AND frame.image.id = :imageId
  </query>

  <query name="framesContainingImage">
    FROM com.trailmagic.image.ImageFrame frame
    WHERE frame.image = :image
  </query>

  <query name="groupsByImage">
    SELECT frame.imageGroup FROM com.trailmagic.image.ImageFrame
    AS frame INNER JOIN frame.imageGroup
    WHERE frame.image = :image
  </query>

  <query name="rollForImage">
    SELECT frame.imageGroup FROM com.trailmagic.image.ImageFrame
    AS frame INNER JOIN frame.imageGroup
    WHERE frame.imageGroup.type = 'roll'
    AND frame.image = :image
  </query>

  <query name="allImageGroups">
    FROM com.trailmagic.image.ImageGroup
  </query>

  <sql-query name="publicFrameCount">
    <return-scalar column="publicFrames" type="integer"/>

    SELECT count(recipient) AS publicFrames FROM acl_object_identity INNER JOIN
    acl_permission ON  (acl_object_identity.id =
    acl_permission.acl_object_identity)
    WHERE recipient = 'ROLE_EVERYONE'
    AND object_identity in
    (SELECT concat('com.trailmagic.image.ImageFrame:', frame_id)
     FROM image_frames where group_id = ?);
  </sql-query>
</hibernate-mapping>