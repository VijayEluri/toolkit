#!/usr/bin/perl -w

%landscapeGeometries =
    ("thumbnail" => "192x128",
     "small" => "384x256",
     "medium" => "768x512",
     "large" => "1536x1024",
     "huge" => "3072x2048");
%portraitGeometries =
    ("thumbnail" => "128x192",
     "small" => "256x384",
     "medium" => "512x768",
     "large" => "1024x1536",
     "huge" => "2048x3072");

%areas =
    ("thumbnail" => (128 * 192),
     "small" => (256 * 384),
     "medium" => (512 * 768),
     "large" => (1024 * 1536),
     "huge" => (2048 * 3072));

if ( ! -d $ARGV[0] ) {
    die "First argument must be a directory of images.";
}

$baseDir = $ARGV[0];
@filelist = `ls $baseDir/*.jpg|xargs -n 1 basename`;
$resizeDir = "$baseDir/resized-images";
mkdir $resizeDir;
$quality = 80;


foreach $file (@filelist) {
    chomp $file;

    ($newFile = $file) =~ /^(\D+)(\d+)\.(.+)$/; # $1$2-thumbnail.$3/;
    $prefix = $1;
    $number = $2;
    $suffix = $3;

    $geometry = `identify $baseDir/$file | awk '{print \$3;}'`;
    $geometry =~ /^(\d+)x(\d+)$/ || die "identify didn't give a geometry for $baseDir/$file.  (geometry was $geometry)";
    $width = $1;
    $height = $2;
    $area = $width * $height;
    if ( $width > $height ) {
        %geometries = %landscapeGeometries;
    } else {
        %geometries = %portraitGeometries;
    }
    
    foreach $size (keys %geometries) {
        $newFile = "$prefix$number-$size.$suffix";
        if ( $area < $areas{$size} ) {
            $cmd = "cp $baseDir/$file $resizeDir/$newFile";
        } else {
            $cmd = "convert -size $geometries{$size} -quality $quality "
                . "-resize \'$geometries{$size}\>\' $baseDir/$file "
                . "$resizeDir/$newFile";
        }
        system "echo $cmd";
        system "$cmd";
    }

    print "Rotating images from exif data...\n";
    system "exiftran -ai @filelist";
}
